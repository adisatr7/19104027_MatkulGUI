# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'LoginWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import random
import mysql.connector
from PyQt5 import QtCore, QtWidgets, QtGui
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QMessageBox


class LoginWindow:
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(400, 300)
        self.tabpane_login_window = QtWidgets.QTabWidget(Form)
        self.tabpane_login_window.setGeometry(QtCore.QRect(0, 0, 401, 301))
        self.tabpane_login_window.setObjectName("tabpane_login_window")
        self.tab_login = QtWidgets.QWidget()
        self.tab_login.setObjectName("tab_login")
        self.formLayoutWidget = QtWidgets.QWidget(self.tab_login)
        self.formLayoutWidget.setGeometry(QtCore.QRect(100, 90, 191, 51))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.login_layout_form = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.login_layout_form.setContentsMargins(0, 0, 0, 0)
        self.login_layout_form.setObjectName("login_layout_form")
        self.login_label_username = QtWidgets.QLabel(self.formLayoutWidget)
        self.login_label_username.setObjectName("login_label_username")
        self.login_layout_form.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.login_label_username)
        self.login_label_password = QtWidgets.QLabel(self.formLayoutWidget)
        self.login_label_password.setObjectName("login_label_password")
        self.login_layout_form.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.login_label_password)
        self.login_field_username = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.login_field_username.setObjectName("login_field_username")
        self.login_layout_form.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.login_field_username)
        self.login_field_password = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.login_field_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.login_field_password.setObjectName("login_field_password")
        self.login_layout_form.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.login_field_password)
        self.login_button = QtWidgets.QPushButton(self.tab_login)
        self.login_button.setGeometry(QtCore.QRect(160, 180, 75, 23))
        self.login_button.setObjectName("login_button")
        self.login_button.clicked.connect(self.login)
        self.tabpane_login_window.addTab(self.tab_login, "")
        self.tab_register = QtWidgets.QWidget()
        self.tab_register.setObjectName("tab_register")
        self.formLayoutWidget_2 = QtWidgets.QWidget(self.tab_register)
        self.formLayoutWidget_2.setGeometry(QtCore.QRect(80, 60, 241, 111))
        self.formLayoutWidget_2.setObjectName("formLayoutWidget_2")
        self.register_layout_form = QtWidgets.QFormLayout(self.formLayoutWidget_2)
        self.register_layout_form.setContentsMargins(0, 0, 0, 0)
        self.register_layout_form.setObjectName("register_layout_form")
        self.register_label_username = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.register_label_username.setObjectName("register_label_username")
        self.register_layout_form.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.register_label_username)
        self.register_field_username = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.register_field_username.setObjectName("register_field_username")
        self.register_layout_form.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.register_field_username)
        self.register_password_label = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.register_password_label.setObjectName("register_password_label")
        self.register_layout_form.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.register_password_label)
        self.register_field_password = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.register_field_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.register_field_password.setObjectName("register_field_password")
        self.register_layout_form.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.register_field_password)
        self.register_field_confirmpassword = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.register_field_confirmpassword.setEchoMode(QtWidgets.QLineEdit.Password)
        self.register_field_confirmpassword.setObjectName("register_field_confirmpassword")
        self.register_layout_form.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.register_field_confirmpassword)
        self.register_field_email = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.register_field_email.setObjectName("register_field_email")
        self.register_layout_form.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.register_field_email)
        self.register_label_email = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.register_label_email.setObjectName("register_label_email")
        self.register_layout_form.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.register_label_email)
        self.register_label_confirmpassword = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.register_label_confirmpassword.setObjectName("register_label_confirmpassword")
        self.register_layout_form.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.register_label_confirmpassword)
        self.register_button = QtWidgets.QPushButton(self.tab_register)
        self.register_button.setGeometry(QtCore.QRect(160, 210, 75, 23))
        self.register_button.setObjectName("register_button")
        self.register_button.clicked.connect(self.register)
        self.tabpane_login_window.addTab(self.tab_register, "")

        self.retranslateUi(Form)
        self.tabpane_login_window.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "MathQuizâ„¢"))
        self.login_label_username.setText(_translate("Form", "Username:"))
        self.login_label_password.setText(_translate("Form", "Password:"))
        self.login_button.setText(_translate("Form", "Login"))
        self.tabpane_login_window.setTabText(self.tabpane_login_window.indexOf(self.tab_login), _translate("Form", "Login"))
        self.register_label_username.setText(_translate("Form", "Username:"))
        self.register_password_label.setText(_translate("Form", "Password:"))
        self.register_label_email.setText(_translate("Form", "Email"))
        self.register_label_confirmpassword.setText(_translate("Form", "Confirm Password"))
        self.register_button.setText(_translate("Form", "Register"))
        self.tabpane_login_window.setTabText(self.tabpane_login_window.indexOf(self.tab_register), _translate("Form", "Register"))

    # Login Button
    def login(self):
        un = self.login_field_username.text()
        pw = self.login_field_password.text()

        # If fields are empty
        if un == "" or pw == "":
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Please input your username and password!")
            msg.setWindowTitle("Hold a sec!")
            msg.exec_()

        # If fields are filled
        else:
            db = mysql.connector.connect(
                host="localhost",
                user="root",
                password="",
                database="db_mathquiz"
            )
            cursor = db.cursor()
            cursor.execute("SELECT username, password, player_id FROM Player")
            myresult = cursor.fetchall()

            # Check all fetched login credentials
            for i in range(len(myresult)):

                # If login success
                if un == myresult[i][0] and pw == myresult[i][1]:
                    menuForm.show()
                    loginForm.close()
                    menuWindow.login(myresult[i][2])

                # If login fail
                else:
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Critical)
                    msg.setText("Wrong username and/or password!")
                    msg.setWindowTitle("Login Failed!")
                    msg.exec_()

    # Register button
    def register(self):
        email = self.register_field_email.text()
        username = self.register_field_username.text()
        password = self.register_field_password.text()
        password2 = self.register_field_confirmpassword.text()

        # If at least one field is empty
        if email == "" or username == "" or password == "" or password2 == "":
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Please fill all fields!")
            msg.setWindowTitle("Hold a sec!")
            msg.exec_()

        # If password and confirm password have different values
        elif password != password2:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Password field and Confirm Password field have different values!")
            msg.setWindowTitle("Something's not right...")
            msg.exec_()

        # If all fields are filled
        else:
            db = mysql.connector.connect(
                host="localhost",
                user="root",
                password="",
                database="db_mathquiz"
            )
            cursor = db.cursor()

            # Check if username and email is available
            cursor.execute("SELECT email, username FROM Player")
            result = cursor.fetchall()

            for i in range(len(result)):
                if email == result[i][0]:
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Critical)
                    msg.setText("Please log in to your account or use another email!")
                    msg.setWindowTitle("Email is registered!")
                    msg.exec_()
                    return

                elif username == result[i][1]:
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Critical)
                    msg.setText("Please flogin to your account or use choose a different username!")
                    msg.setWindowTitle("Username is registered!")
                    msg.exec_()
                    return

            # New data insertion
            cursor.execute(f"INSERT INTO Player (email, username, password) VALUE ({email}, {username}, {password})")

            # Empty all fields
            self.register_field_email.setText("")
            self.register_field_username.setText("")
            self.register_field_password.setText("")
            self.register_field_confirmpassword.setText("")

            # Popup message
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Password field and Confirm Password field have different values!")
            msg.setWindowTitle("New account has been registered!")
            msg.exec_()


class MenuWindow(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(399, 300)
        self.tabpane_menu_window = QtWidgets.QTabWidget(Form)
        self.tabpane_menu_window.setGeometry(QtCore.QRect(0, 0, 401, 301))
        self.tabpane_menu_window.setObjectName("tabpane_menu_window")
        self.tab_play = QtWidgets.QWidget()
        self.tab_play.setObjectName("tab_play")
        self.play_button_start = QtWidgets.QPushButton(self.tab_play)
        self.play_button_start.setGeometry(QtCore.QRect(160, 230, 75, 23))
        self.play_button_start.setObjectName("play_button_start")
        self.play_button_start.clicked.connect(self.play)
        self.gridLayoutWidget = QtWidgets.QWidget(self.tab_play)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 381, 181))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.play_layout_grid = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.play_layout_grid.setContentsMargins(0, 0, 0, 0)
        self.play_layout_grid.setObjectName("play_layout_grid")
        self.play_label_gamesettings = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.play_label_gamesettings.setFont(font)
        self.play_label_gamesettings.setAlignment(QtCore.Qt.AlignCenter)
        self.play_label_gamesettings.setObjectName("play_label_gamesettings")
        self.play_layout_grid.addWidget(self.play_label_gamesettings, 8, 0, 1, 3)
        self.play_label_latest_score = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_latest_score.setObjectName("play_label_latest_score")
        self.play_layout_grid.addWidget(self.play_label_latest_score, 2, 0, 1, 1)
        self.play_spacer1 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_spacer1.setText("")
        self.play_spacer1.setObjectName("play_spacer1")
        self.play_layout_grid.addWidget(self.play_spacer1, 6, 1, 1, 1)
        self.play_spacer2 = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_spacer2.setText("")
        self.play_spacer2.setObjectName("play_spacer2")
        self.play_layout_grid.addWidget(self.play_spacer2, 7, 1, 1, 1)
        self.play_label_timeout = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_timeout.setObjectName("play_label_timeout")
        self.play_layout_grid.addWidget(self.play_label_timeout, 10, 0, 1, 1)
        self.play_label_personal_best = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_personal_best.setObjectName("play_label_personal_best")
        self.play_layout_grid.addWidget(self.play_label_personal_best, 4, 0, 1, 1)
        self.play_label_difficulty = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_difficulty.setObjectName("play_label_difficulty")
        self.play_layout_grid.addWidget(self.play_label_difficulty, 9, 0, 1, 1)
        self.play_label_yourperformance = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.play_label_yourperformance.setFont(font)
        self.play_label_yourperformance.setAlignment(QtCore.Qt.AlignCenter)
        self.play_label_yourperformance.setObjectName("play_label_yourperformance")
        self.play_layout_grid.addWidget(self.play_label_yourperformance, 1, 0, 1, 3)
        self.play_spinbox_timout = QtWidgets.QSpinBox(self.gridLayoutWidget)
        self.play_spinbox_timout.setMinimum(1)
        self.play_spinbox_timout.setMaximum(300)
        self.play_spinbox_timout.setProperty("value", 60)
        self.play_spinbox_timout.setObjectName("play_spinbox_timout")
        self.play_layout_grid.addWidget(self.play_spinbox_timout, 10, 1, 1, 1)
        self.play_label_duration = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_duration.setObjectName("play_label_duration")
        self.play_layout_grid.addWidget(self.play_label_duration, 10, 2, 1, 1)
        self.play_label_latestscore = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_latestscore.setObjectName("play_label_latestscore")
        self.play_layout_grid.addWidget(self.play_label_latestscore, 2, 1, 1, 2)
        self.play_label_highestscore = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_highestscore.setObjectName("play_label_highestscore")
        self.play_layout_grid.addWidget(self.play_label_highestscore, 4, 1, 1, 2)
        self.play_label_correctanswers = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_correctanswers.setObjectName("play_label_correctanswers")
        self.play_layout_grid.addWidget(self.play_label_correctanswers, 3, 0, 1, 1)
        self.play_label_questions_answered = QtWidgets.QLabel(self.gridLayoutWidget)
        self.play_label_questions_answered.setObjectName("play_label_questions_answered")
        self.play_layout_grid.addWidget(self.play_label_questions_answered, 3, 1, 1, 2)
        self.play_dropdown_difficulty = QtWidgets.QComboBox(self.gridLayoutWidget)
        self.play_dropdown_difficulty.setObjectName("play_dropdown_difficulty")
        self.play_dropdown_difficulty.addItem("")
        self.play_dropdown_difficulty.addItem("")
        self.play_dropdown_difficulty.addItem("")
        self.play_dropdown_difficulty.addItem("")
        self.play_layout_grid.addWidget(self.play_dropdown_difficulty, 9, 1, 1, 1)
        self.tabpane_menu_window.addTab(self.tab_play, "")
        self.tab_profile = QtWidgets.QWidget()
        self.tab_profile.setObjectName("tab_profile")
        self.profile_label_profilepic = QtWidgets.QLabel(self.tab_profile)
        self.profile_label_profilepic.setGeometry(QtCore.QRect(10, 10, 64, 64))
        self.profile_label_profilepic.setAutoFillBackground(False)
        self.profile_label_profilepic.setFrameShape(QtWidgets.QFrame.Box)
        self.profile_label_profilepic.setObjectName("profile_label_profilepic")
        self.profile_label_playername = QtWidgets.QLabel(self.tab_profile)
        self.profile_label_playername.setGeometry(QtCore.QRect(90, 10, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.profile_label_playername.setFont(font)
        self.profile_label_playername.setObjectName("profile_label_playername")
        self.profile_button_changepic = QtWidgets.QPushButton(self.tab_profile)
        self.profile_button_changepic.setGeometry(QtCore.QRect(10, 80, 64, 21))
        self.profile_button_changepic.setObjectName("profile_button_changepic")
        self.profile_button_logout = QtWidgets.QPushButton(self.tab_profile)
        self.profile_button_logout.setGeometry(QtCore.QRect(320, 10, 64, 21))
        self.profile_button_logout.setObjectName("profile_button_logout")
        self.profile_group_recentmatches = QtWidgets.QGroupBox(self.tab_profile)
        self.profile_group_recentmatches.setGeometry(QtCore.QRect(10, 110, 181, 161))
        self.profile_group_recentmatches.setObjectName("profile_group_recentmatches")
        self.profile_table_recentmatches = QtWidgets.QTableView(self.profile_group_recentmatches)
        self.profile_table_recentmatches.setGeometry(QtCore.QRect(-5, 21, 271, 181))
        self.profile_table_recentmatches.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.profile_table_recentmatches.setObjectName("profile_table_recentmatches")
        self.user_stats = QtWidgets.QGroupBox(self.tab_profile)
        self.user_stats.setGeometry(QtCore.QRect(200, 110, 181, 161))
        self.user_stats.setObjectName("user_stats")
        self.total_played_label = QtWidgets.QLabel(self.user_stats)
        self.total_played_label.setGeometry(QtCore.QRect(10, 30, 111, 16))
        self.total_played_label.setObjectName("total_played_label")
        self.stat_played = QtWidgets.QLabel(self.user_stats)
        self.stat_played.setGeometry(QtCore.QRect(130, 30, 47, 13))
        self.stat_played.setText("")
        self.stat_played.setObjectName("stat_played")
        self.highest_score_label = QtWidgets.QLabel(self.user_stats)
        self.highest_score_label.setGeometry(QtCore.QRect(10, 50, 111, 16))
        self.highest_score_label.setObjectName("highest_score_label")
        self.stat_score = QtWidgets.QLabel(self.user_stats)
        self.stat_score.setGeometry(QtCore.QRect(130, 50, 47, 13))
        self.stat_score.setText("")
        self.stat_score.setObjectName("stat_score")
        self.leaderboard_position_label = QtWidgets.QLabel(self.user_stats)
        self.leaderboard_position_label.setGeometry(QtCore.QRect(10, 70, 121, 16))
        self.leaderboard_position_label.setObjectName("leaderboard_position_label")
        self.stat_leaderboard = QtWidgets.QLabel(self.user_stats)
        self.stat_leaderboard.setGeometry(QtCore.QRect(130, 70, 47, 13))
        self.stat_leaderboard.setText("")
        self.stat_leaderboard.setObjectName("stat_leaderboard")
        self.tabpane_menu_window.addTab(self.tab_profile, "")
        self.tab_shop = QtWidgets.QWidget()
        self.tab_shop.setObjectName("tab_shop")
        self.shop__label_greetings = QtWidgets.QLabel(self.tab_shop)
        self.shop__label_greetings.setGeometry(QtCore.QRect(90, 10, 221, 16))
        self.shop__label_greetings.setObjectName("shop__label_greetings")
        self.shop_label_points = QtWidgets.QLabel(self.tab_shop)
        self.shop_label_points.setGeometry(QtCore.QRect(90, 30, 151, 16))
        self.shop_label_points.setObjectName("shop_label_points")
        self.tabpane_itemshops = QtWidgets.QTabWidget(self.tab_shop)
        self.tabpane_itemshops.setGeometry(QtCore.QRect(-4, 80, 401, 201))
        self.tabpane_itemshops.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabpane_itemshops.setObjectName("tabpane_itemshops")
        self.tab_featured = QtWidgets.QWidget()
        self.tab_featured.setObjectName("tab_featured")
        self.shop_scrollarea_featured = QtWidgets.QScrollArea(self.tab_featured)
        self.shop_scrollarea_featured.setGeometry(QtCore.QRect(0, 0, 401, 181))
        self.shop_scrollarea_featured.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.shop_scrollarea_featured.setWidgetResizable(True)
        self.shop_scrollarea_featured.setObjectName("shop_scrollarea_featured")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 399, 179))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.shop_scrollarea_featured.setWidget(self.scrollAreaWidgetContents_3)
        self.tabpane_itemshops.addTab(self.tab_featured, "")
        self.tab_avatar = QtWidgets.QWidget()
        self.tab_avatar.setObjectName("tab_avatar")
        self.shop_scrollarea_avatar = QtWidgets.QScrollArea(self.tab_avatar)
        self.shop_scrollarea_avatar.setGeometry(QtCore.QRect(0, 0, 401, 181))
        self.shop_scrollarea_avatar.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.shop_scrollarea_avatar.setWidgetResizable(True)
        self.shop_scrollarea_avatar.setObjectName("shop_scrollarea_avatar")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 399, 179))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalScrollBar_2 = QtWidgets.QScrollBar(self.scrollAreaWidgetContents_2)
        self.verticalScrollBar_2.setGeometry(QtCore.QRect(380, 0, 16, 171))
        self.verticalScrollBar_2.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar_2.setObjectName("verticalScrollBar_2")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.scrollAreaWidgetContents_2)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 10, 66, 66))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.shop_label_avatarImage = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.shop_label_avatarImage.setText("")
        self.shop_label_avatarImage.setPixmap(QtGui.QPixmap("assets/avatar1_shop.png"))
        self.shop_label_avatarImage.setObjectName("shop_label_avatarImage")
        self.verticalLayout_2.addWidget(self.shop_label_avatarImage)
        self.shop_label_avatarName = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.shop_label_avatarName.setGeometry(QtCore.QRect(80, 10, 81, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.shop_label_avatarName.setFont(font)
        self.shop_label_avatarName.setObjectName("shop_label_avatarName")
        self.shop_label_avatarCost = QtWidgets.QLabel(self.scrollAreaWidgetContents_2)
        self.shop_label_avatarCost.setGeometry(QtCore.QRect(80, 30, 51, 16))
        self.shop_label_avatarCost.setObjectName("shop_label_avatarCost")
        self.shop_pushButton_avatarBuy = QtWidgets.QPushButton(self.scrollAreaWidgetContents_2)
        self.shop_pushButton_avatarBuy.setGeometry(QtCore.QRect(290, 20, 75, 23))
        self.shop_pushButton_avatarBuy.setObjectName("shop_pushButton_avatarBuy")
        self.shop_scrollarea_avatar.setWidget(self.scrollAreaWidgetContents_2)
        self.tabpane_itemshops.addTab(self.tab_avatar, "")
        self.tab_powerups = QtWidgets.QWidget()
        self.tab_powerups.setObjectName("tab_powerups")
        self.shop_scrollarea_powerups = QtWidgets.QScrollArea(self.tab_powerups)
        self.shop_scrollarea_powerups.setGeometry(QtCore.QRect(0, 0, 401, 181))
        self.shop_scrollarea_powerups.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.shop_scrollarea_powerups.setWidgetResizable(True)
        self.shop_scrollarea_powerups.setObjectName("shop_scrollarea_powerups")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 399, 179))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(20, 10, 341, 80))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_2 = QtWidgets.QFrame(self.verticalLayoutWidget_3)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.shop_label_powerUpsName = QtWidgets.QLabel(self.frame_2)
        self.shop_label_powerUpsName.setGeometry(QtCore.QRect(80, 30, 81, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.shop_label_powerUpsName.setFont(font)
        self.shop_label_powerUpsName.setObjectName("shop_label_powerUpsName")
        self.layoutWidget = QtWidgets.QWidget(self.frame_2)
        self.layoutWidget.setGeometry(QtCore.QRect(200, 50, 130, 25))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.shop_label_powerUpsCost = QtWidgets.QLabel(self.layoutWidget)
        self.shop_label_powerUpsCost.setObjectName("shop_label_powerUpsCost")
        self.horizontalLayout.addWidget(self.shop_label_powerUpsCost)
        self.shop_pushButton_powerUpsBuy = QtWidgets.QPushButton(self.layoutWidget)
        self.shop_pushButton_powerUpsBuy.setObjectName("shop_pushButton_powerUpsBuy")
        self.horizontalLayout.addWidget(self.shop_pushButton_powerUpsBuy)
        self.shop_label_powerUpsPict = QtWidgets.QLabel(self.frame_2)
        self.shop_label_powerUpsPict.setGeometry(QtCore.QRect(10, 10, 64, 64))
        self.shop_label_powerUpsPict.setAutoFillBackground(False)
        self.shop_label_powerUpsPict.setFrameShape(QtWidgets.QFrame.Box)
        self.shop_label_powerUpsPict.setText("")
        self.shop_label_powerUpsPict.setPixmap(QtGui.QPixmap("assets/powerups_shop.png"))
        self.shop_label_powerUpsPict.setObjectName("shop_label_powerUpsPict")
        self.verticalLayout_3.addWidget(self.frame_2)
        self.verticalScrollBar_3 = QtWidgets.QScrollBar(self.scrollAreaWidgetContents)
        self.verticalScrollBar_3.setGeometry(QtCore.QRect(380, 0, 16, 171))
        self.verticalScrollBar_3.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar_3.setObjectName("verticalScrollBar_3")
        self.shop_scrollarea_powerups.setWidget(self.scrollAreaWidgetContents)
        self.tabpane_itemshops.addTab(self.tab_powerups, "")
        self.shop_label_profilepic = QtWidgets.QLabel(self.tab_shop)
        self.shop_label_profilepic.setGeometry(QtCore.QRect(10, 10, 64, 64))
        self.shop_label_profilepic.setAutoFillBackground(False)
        self.shop_label_profilepic.setFrameShape(QtWidgets.QFrame.Box)
        self.shop_label_profilepic.setObjectName("shop_label_profilepic")
        self.tabpane_menu_window.addTab(self.tab_shop, "")
        self.tab_leaderboard = QtWidgets.QWidget()
        self.tab_leaderboard.setObjectName("tab_leaderboard")
        self.leaderboard_table = QtWidgets.QTableView(self.tab_leaderboard)
        self.leaderboard_table.setGeometry(QtCore.QRect(0, 40, 391, 231))
        self.leaderboard_table.setObjectName("leaderboard_table")
        self.leaderboard_label_playername = QtWidgets.QLabel(self.tab_leaderboard)
        self.leaderboard_label_playername.setGeometry(QtCore.QRect(10, 0, 371, 16))
        self.leaderboard_label_playername.setObjectName("leaderboard_label_playername")
        self.leaderboard_label_highestscore = QtWidgets.QLabel(self.tab_leaderboard)
        self.leaderboard_label_highestscore.setGeometry(QtCore.QRect(10, 20, 371, 16))
        self.leaderboard_label_highestscore.setObjectName("leaderboard_label_highestscore")
        self.tabpane_menu_window.addTab(self.tab_leaderboard, "")

        self.retranslateUi(Form)
        self.tabpane_menu_window.setCurrentIndex(2)
        self.tabpane_itemshops.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.play_button_start.setText(_translate("Form", "Start"))
        self.play_label_gamesettings.setText(_translate("Form", "Game Settings"))
        self.play_label_latest_score.setText(_translate("Form", "Latest score:"))
        self.play_label_timeout.setText(_translate("Form", "Timeout:"))
        self.play_label_personal_best.setText(_translate("Form", "Personal best:"))
        self.play_label_difficulty.setText(_translate("Form", "Difficulty:"))
        self.play_label_yourperformance.setText(_translate("Form", "Your Performance"))
        self.play_label_duration.setText(_translate("Form", "seconds per question"))
        self.play_label_latestscore.setText(_translate("Form", "{latest_score}"))
        self.play_label_highestscore.setText(_translate("Form", "{player.highest_score}"))
        self.play_label_correctanswers.setText(_translate("Form", "Correct answers:"))
        self.play_label_questions_answered.setText(_translate("Form", "{questions_answered}"))
        self.play_dropdown_difficulty.setItemText(0, _translate("Form", "(Select one)"))
        self.play_dropdown_difficulty.setItemText(1, _translate("Form", "Please be gentle!"))
        self.play_dropdown_difficulty.setItemText(2, _translate("Form", "I have a brain"))
        self.play_dropdown_difficulty.setItemText(3, _translate("Form", "I can count sands"))
        self.tabpane_menu_window.setTabText(self.tabpane_menu_window.indexOf(self.tab_play), _translate("Form", "Play"))
        self.profile_label_profilepic.setText(_translate("Form", "{player.active_profile}"))
        self.profile_label_playername.setText(_translate("Form", "{player.name}"))
        self.profile_button_changepic.setText(_translate("Form", "Change"))
        self.profile_button_logout.setText(_translate("Form", "Log Out"))
        self.profile_group_recentmatches.setTitle(_translate("Form", "Recent Matches"))
        self.user_stats.setTitle(_translate("Form", "User Stats"))
        self.total_played_label.setText(_translate("Form", "Total Played Games   :"))
        self.highest_score_label.setText(_translate("Form", "Highest Score            :"))
        self.leaderboard_position_label.setText(_translate("Form", "Leaderboard Position :"))
        self.tabpane_menu_window.setTabText(self.tabpane_menu_window.indexOf(self.tab_profile), _translate("Form", "Profile"))
        self.shop__label_greetings.setText(_translate("Form", "Welcome to the shop, {player.name}!"))
        self.shop_label_points.setText(_translate("Form", "Current points: {player.points}"))
        self.tabpane_itemshops.setTabText(self.tabpane_itemshops.indexOf(self.tab_featured), _translate("Form", "Featured"))
        self.shop_label_avatarName.setText(_translate("Form", "Avatar Name"))
        self.shop_label_avatarCost.setText(_translate("Form", "10 Points"))
        self.shop_pushButton_avatarBuy.setText(_translate("Form", "Buy"))
        self.tabpane_itemshops.setTabText(self.tabpane_itemshops.indexOf(self.tab_avatar), _translate("Form", "Avatars"))
        self.shop_label_powerUpsName.setText(_translate("Form", "2 Times Help"))
        self.shop_label_powerUpsCost.setText(_translate("Form", "10 Points"))
        self.shop_pushButton_powerUpsBuy.setText(_translate("Form", "Buy"))
        self.tabpane_itemshops.setTabText(self.tabpane_itemshops.indexOf(self.tab_powerups), _translate("Form", "Power Ups"))
        self.shop_label_profilepic.setText(_translate("Form", "{player.active_profile}"))
        self.tabpane_menu_window.setTabText(self.tabpane_menu_window.indexOf(self.tab_shop), _translate("Form", "Shop"))
        self.leaderboard_label_playername.setText(_translate("Form", "Your name {player.name}"))
        self.leaderboard_label_highestscore.setText(_translate("Form", "Highest Score: {player.highest_score}"))
        self.tabpane_menu_window.setTabText(self.tabpane_menu_window.indexOf(self.tab_leaderboard), _translate("Form", "Leaderboard"))

    def login(self, playerId):
        self.playerId = playerId

    def play(self):
        if self.play_dropdown_difficulty.currentIndex() == 0:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Please choose a difficulty!")
            msg.setWindowTitle("Please choose a difficulty!!")
            msg.exec_()

        else:
            gameWindow.startRound(self.play_dropdown_difficulty.currentIndex(), self.playerId)


class GameWindow:
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(404, 305)
        self.gridLayoutWidget = QtWidgets.QWidget(Form)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 0, 401, 301))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.giveup_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.giveup_button.sizePolicy().hasHeightForWidth())
        self.giveup_button.setSizePolicy(sizePolicy)
        self.giveup_button.setObjectName("giveup_button")
        self.giveup_button.clicked.connect(self.giveup)
        self.gridLayout.addWidget(self.giveup_button, 10, 0, 1, 1)
        self.round_label = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.round_label.setFont(font)
        self.round_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.round_label.setAlignment(QtCore.Qt.AlignCenter)
        self.round_label.setObjectName("round_label")
        self.gridLayout.addWidget(self.round_label, 0, 0, 1, 2)
        self.submit_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.submit_button.sizePolicy().hasHeightForWidth())
        self.submit_button.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setStrikeOut(False)
        font.setKerning(True)
        self.submit_button.setFont(font)
        self.submit_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.submit_button.setCheckable(False)
        self.submit_button.setFlat(False)
        self.submit_button.setObjectName("submit_button")
        self.submit_button.clicked.connect(self.submit)
        self.gridLayout.addWidget(self.submit_button, 10, 1, 1, 1)
        self.question_label = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.question_label.setFont(font)
        self.question_label.setAlignment(QtCore.Qt.AlignCenter)
        self.question_label.setObjectName("question_label")
        self.gridLayout.addWidget(self.question_label, 2, 0, 1, 2)
        self.freezetime_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.gridLayout.addWidget(self.freezetime_button, 3, 1, 1, 1)
        self.skip_total_label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.skip_total_label.setAlignment(QtCore.Qt.AlignCenter)
        self.skip_total_label.setObjectName("skip_total_label")
        self.gridLayout.addWidget(self.skip_total_label, 8, 1, 1, 1)
        self.answer_c = QtWidgets.QRadioButton(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(22)
        self.answer_c.setFont(font)
        self.answer_c.setObjectName("answer_c")
        self.gridLayout.addWidget(self.answer_c, 7, 0, 2, 1)
        self.doublepoint_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.gridLayout.addWidget(self.doublepoint_button, 5, 1, 1, 1)
        self.timer_label = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.timer_label.setFont(font)
        self.timer_label.setAlignment(QtCore.Qt.AlignCenter)
        self.timer_label.setObjectName("timer_label")
        self.gridLayout.addWidget(self.timer_label, 1, 0, 1, 2)
        self.freezetime_total_label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.freezetime_total_label.setAlignment(QtCore.Qt.AlignCenter)
        self.freezetime_total_label.setObjectName("freezetime_total_label")
        self.gridLayout.addWidget(self.freezetime_total_label, 4, 1, 1, 1)
        self.skip_button = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.gridLayout.addWidget(self.skip_button, 7, 1, 1, 1)
        self.spacer = QtWidgets.QLabel(self.gridLayoutWidget)
        self.spacer.setText("")
        self.spacer.setObjectName("spacer")
        self.gridLayout.addWidget(self.spacer, 9, 0, 1, 2)
        self.answer_b = QtWidgets.QRadioButton(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(22)
        self.answer_b.setFont(font)
        self.answer_b.setObjectName("answer_b")
        self.gridLayout.addWidget(self.answer_b, 5, 0, 2, 1)
        self.answer_a = QtWidgets.QRadioButton(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setPointSize(22)
        self.answer_a.setFont(font)
        self.answer_a.setObjectName("answer_a")
        self.gridLayout.addWidget(self.answer_a, 3, 0, 2, 1)
        self.doublepoint_total_label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.doublepoint_total_label.setAlignment(QtCore.Qt.AlignCenter)
        self.doublepoint_total_label.setObjectName("doublepoint_total_label")
        self.gridLayout.addWidget(self.doublepoint_total_label, 6, 1, 1, 1)

        # Freeze Time power up icon setup
        freezetime_icon = QIcon('Asset/freezetime_icon.png') # import picture
        self.freezetime_button.setObjectName("freezetime_button")
        self.freezetime_button.setIcon(freezetime_icon) # add freezetime icon

        # Skip Round power up icon setup
        skip_icon = QIcon('Asset/skip_icon.png') # import picture
        self.skip_button.setObjectName("skip_button")
        self.skip_button.setIcon(skip_icon) # add skip icon

        # Double Point power up icon setup
        doublepoint_icon = QIcon('Asset/doublepoint_icon.png')
        self.doublepoint_button.setObjectName("doublepoint_button")
        self.doublepoint_button.setIcon(doublepoint_icon)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "MathQuizâ„¢"))
        self.giveup_button.setText(_translate("Form", "Give up"))
        self.round_label.setText(_translate("Form", "Round: {x}"))
        self.submit_button.setText(_translate("Form", "Submit"))
        self.question_label.setText(_translate("Form", "20 : 2 ="))
        self.freezetime_button.setText(_translate("Form", " Freeze Time"))
        self.skip_total_label.setText(_translate("Form", "You Have: {total}"))
        self.doublepoint_button.setText(_translate("Form", " Double Point"))
        self.timer_label.setText(_translate("Form", "{timer}"))
        self.freezetime_total_label.setText(_translate("Form", "You Have: {total}"))
        self.skip_button.setText(_translate("Form", " Skip Round"))
        self.answer_a.setText(_translate("Form", "Answer A"))
        self.answer_b.setText(_translate("Form", "Answer B"))
        self.answer_c.setText(_translate("Form", "Answer C"))
        self.doublepoint_total_label.setText(_translate("Form", "You Have : {total}"))


    def startRound(self, difficulty, playerId):
        gameForm.show()
        menuForm.close()
        self.difficulty = difficulty
        self.playerId = playerId
        self.gameRound = 1
        self.life = 4 - self.difficulty
        self.totalPts = 0

        self.generateQuestion()


    def nextRound(self):
        gameWindow.gameRound += 1
        self.generateQuestion()


    def generateQuestion(self):
        self.difficultyAdjustment()
        self.generateCorrectAnswer()
        self.generateWrongAnswers()
        self.randomizeAnswerPlacement()
        self.printGeneratedQuestion()


    def difficultyAdjustment(self):
        # Difficulty settings
        EASY = int(self.gameRound / 3)
        NORMAL = int(self.gameRound / 2)
        HARD = (self.gameRound)

        # Easy mode
        if self.difficulty == 1:
            self.op = self.randomizeOperator()
            if self.op == 4:
                self.op -= 1
            self.n1 = self.randomizeNumber(EASY)
            self.n2 = self.randomizeNumber(EASY)

        # Normal mode
        elif self.difficulty == 2:
            self.op = self.randomizeOperator()
            self.n1 = self.randomizeNumber(NORMAL) if self.op != 4 else self.randomizeEvenNumber(NORMAL)
            self.n2 = self.randomizeNumberWithNegative(NORMAL) if self.op != 4 else self.randomizeEvenNumber(NORMAL)

        # Hard mode
        elif self.difficulty == 3:
            self.op = self.randomizeOperator()
            self.n1 = self.randomizeNumberWithNegative(HARD) if self.op != 4 else self.randomizeEvenNumber(HARD)
            self.n2 = self.randomizeNumberWithNegative(HARD) if self.op != 4 else self.randomizeEvenNumber(HARD)

        # Should not happen, but just in case...
        else:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Error while adjusting game difficulty!")
            msg.setWindowTitle("Please report this to the developer!")
            msg.exec_()


    def generateCorrectAnswer(self):
        self.correctAnswer = 1

        if self.op == 1:
            self.correctAnswer = self.n1 + self.n2
        elif self.op == 2:
            self.correctAnswer = self.n1 - self.n2
        elif self.op == 3:
            self.correctAnswer = self.n1 * self.n2
        elif self.op == 4:
            self.correctAnswer = self.n1 / self.n2

        # else:
        #    msg = QMessageBox()
        #    msg.setIcon(QMessageBox.Critical)
        #    msg.setText("Error while calculating correct answer!")
        #    msg.setWindowTitle("Please report this to the developer!")
        #    msg.exec_()


    def generateWrongAnswers(self):
        self.wrongAnswer1 = self.correctAnswer + self.randomizeNumberWithNegative(random.randint(1, self.difficulty))
        self.wrongAnswer2 = self.correctAnswer + self.randomizeNumberWithNegative(random.randint(1, self.difficulty))


    def randomizeAnswerPlacement(self):
        n = random.randint(1,4)

        if n == 1:
            self.answerA = self.correctAnswer
            self.answerB = self.wrongAnswer1
            self.answerC = self.wrongAnswer2
        elif n == 2:
            self.answerA = self.wrongAnswer1
            self.answerB = self.correctAnswer
            self.answerC = self.wrongAnswer2
        else:
            self.answerA = self.wrongAnswer1
            self.answerB = self.wrongAnswer2
            self.answerC = self.correctAnswer


    def printGeneratedQuestion(self):

        operator = ""
        if self.op == 1:
            operator = "+"
        elif self.op == 2:
            operator = "-"
        elif self.op == 3:
            operator = "*"
        else:
            operator = "/"

        # Round | Life
        self.round_label.setText(f"Round: {self.gameRound} | Life: {self.life}/{4 - self.difficulty}")

        # Question
        self.question_label.setText(f"{self.n1} {operator} {self.n2}")

        # Answers
        self.answer_a.setText(str(self.answerA))
        self.answer_b.setText(str(self.answerB))
        self.answer_c.setText(str(self.answerC))


    def randomizeNumber(self, maxDigit):
        max = 0
        temp = 10
        for i in range(maxDigit):
            max += temp
            temp *= 10
        return random.randint(1, max)


    def randomizeNumberWithNegative(self, maxDigit):
        max = 0
        temp = 10
        for i in range(maxDigit):
            max += temp
            temp *= 10
        return random.randint(max * -1, max)


    def randomizeEvenNumber(self, maxDigit):
        result = 1
        while result % 2 != 0:
            result = self.randomizeNumber(maxDigit)
        return result


    def randomizeOperator(self):
        return random.randint(1, 5)


    def submit(self):
        # Radiobutton check
        if self.answer_a.isChecked():
            answer = self.answerA
            self.answer_a.setChecked(False)
        elif self.answer_b.isChecked():
            answer = self.answerB
            self.answer_b.setChecked(False)
        elif self.answer_c.isChecked():
            answer = self.answerC
            self.answer_c.setChecked(False)
        else:
            answer = ""

        # Answer check
        if answer == self.correctAnswer:
            # Calculate points and reward them to the player
            pts = self.gameRound + self.difficulty
            self.totalPts += pts

            # Show popup message
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText(f"You earned {pts} points (total: {self.totalPts})!")
            msg.setWindowTitle("Correct!")
            msg.exec_()
            self.nextRound()

        elif self.life > 0:
            # Lower life by 1
            self.life -= 1

            # Show popup message
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Warning)
            msg.setText(f"Please try again!")
            msg.setWindowTitle("Wrong answer!")
            msg.exec_()

            # Generate a new question
            self.generateQuestion()

        else:
            self.gameOver()


    def giveup(self):
        self.gameOver()


    def gameOver(self):
        # Show popup message
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)
        msg.setText(f"You answered {self.gameRound -1} questions and earned {self.totalPts} points!")
        msg.setWindowTitle("Game Over!")
        msg.exec_()

        # Update record
        db = mysql.connector.connect(
            host="localhost",
            user="root",
            password="",
            database="db_mathquiz"
        )
        c = db.cursor()
        # TODO: Implement timer, then uncomment this:
        # c.execute(f"INSERT INTO game (player_id, score, start_time, questions_answered) "
        #           f"VALUE ({self.playerId}, {self.totalPts}, {startTime}, {self.gameRound}))")

        # Change window
        gameForm.close()
        menuForm.show()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)

    # LoginWindow and its form
    loginForm = QtWidgets.QWidget()
    loginWindow = LoginWindow()
    loginWindow.setupUi(loginForm)

    # MenuWindow and its form
    menuForm = QtWidgets.QWidget()
    menuWindow = MenuWindow()
    menuWindow.setupUi(menuForm)

    # GameWindow and its form
    gameForm = QtWidgets.QWidget()
    gameWindow = GameWindow()
    gameWindow.setupUi(gameForm)

    loginForm.show()
    sys.exit(app.exec_())
